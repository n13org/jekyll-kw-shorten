{
  "folders": [{
    "path": "."
  }],
  "extensions": {
    "recommendations": [
      "streetsidesoftware.code-spell-checker",
      "streetsidesoftware.code-spell-checker-german",
      "Huuums.vscode-fast-folder-structure"
    ]
  },
  "settings": {
    "cSpell.ignorePaths": [
      "**/**.code-workspace",
      "**/Gemfile",
      "**/Gemfile.lock",
      "**/package-lock.json",
      "**/node_modules/**",
      "**/vscode-extension/**",
      "**/.git/objects/**",
      ".vscode",
      ".vscode-insiders"
    ],
    "cSpell.language": "en,de",
    "cSpell.words": [
      "Huuums",
      "Karg",
      "KargWare"
    ],
    "[ruby]": {
      "editor.tabSize": 2,
      "editor.insertSpaces": true,
      "editor.formatOnSave": true,
      "editor.autoIndent": "full",
      "files.trimTrailingWhitespace": true
    },
    "folderTemplates.structures": [{
      "name": "NewJekyllPlugInAsRubyGem",
      "customVariables": [
        "Company=>KargWare",
        "Project=>JekyllPlugInTemplate"
      ],
      "omitParentDirectory": true,
      "structure": [{
          "fileName": ".gitignore",
          "template": "NewJekyllPlugInAsRubyGem-.gitignore"
        },
        {
          "fileName": ".rubocop.yml",
          "template": "NewJekyllPlugInAsRubyGem-.rubocop.yml"
        },
        {
          "fileName": "Gemfile",
          "template": "NewJekyllPlugInAsRubyGem-Gemfile"
        },
        {
          "fileName": "Gemfile.lock",
          "template": "NewJekyllPlugInAsRubyGem-Gemfile.lock"
        },
        {
          "fileName": "Rakefile",
          "template": "NewJekyllPlugInAsRubyGem-Rakefile"
        },
        {
          "fileName": "jekyll-<Company>-<Project>.gemspec",
          "template": "NewJekyllPlugInAsRubyGem-jekyll-KargWare-PlugInTemplate.gemspec"
        },
        {
          "fileName": "lib/jekyll/<Company>/<Project>/configuration.rb",
          "template": "NewJekyllPlugInAsRubyGem-lib/jekyll/KargWare/PlugInTemplate/configuration.rb"
        },
        {
          "fileName": "lib/jekyll/<Company>/<Project>/version.rb",
          "template": "NewJekyllPlugInAsRubyGem-lib/jekyll/KargWare/PlugInTemplate/version.rb"
        },
        {
          "fileName": "lib/jekyll/<Company>/<Project>.rb",
          "template": "NewJekyllPlugInAsRubyGem-lib/jekyll/KargWare/PlugInTemplate.rb"
        },
        {
          "fileName": "test/jekyll/<Company>/<Project>/configuration_test.rb",
          "template": "NewJekyllPlugInAsRubyGem-test/jekyll/KargWare/PlugInTemplate/configuration_test.rb"
        },
        {
          "fileName": "test/jekyll/<Company>/<Project>/version_test.rb",
          "template": "NewJekyllPlugInAsRubyGem-test/jekyll/KargWare/PlugInTemplate/version_test.rb"
        },
        {
          "fileName": "test/test_helper.rb",
          "template": "NewJekyllPlugInAsRubyGem-test/test_helper.rb"
        }
      ]
    }],
    "folderTemplates.fileTemplates": {
      "NewJekyllPlugInAsRubyGem-.gitignore": [
        "# gems",
        "*.gem",
        "/Gemfile.lock",
        "*.gemfile.lock",
        "/gems/",
        "",
        "# local gem package folder",
        "/pkg/",
        "",
        "# tests / test coverage",
        ".jekyll-cache/",
        "/coverage",
        "",
        "# bundler",
        "/.bundle/",
        "/vendor/bundle/",
        "/gemfiles/.bundle/",
        "/gemfiles/vendor/bundle/",
        "",
        "# unsorted",
        ""
      ],
      "NewJekyllPlugInAsRubyGem-.rubocop.yml": [
        "AllCops:",
        "  TargetRubyVersion: 2.4",
        "  Exclude:",
        "    - _site/**/*",
        "    - node_modules/**/*",
        "    - vendor/bundle/**/*",
        "    - Rakefile",
        "    - Gemfile",
        "    - \"*.gemspec\"",
        "  NewCops: enable",
        "",
        "Layout/EndOfLine:",
        "  Enabled: false",
        "Layout/LineLength:",
        "  Enabled: false",
        "Layout/SpaceAroundMethodCallOperator:",
        "  Enabled: false",
        "",
        "Lint/RaiseException:",
        "  Enabled: true",
        "Lint/StructNewOverride:",
        "  Enabled: true",
        "",
        "Metrics/MethodLength:",
        "  Enabled: false",
        "Metrics/AbcSize:",
        "  Enabled: false",
        "Metrics/ClassLength:",
        "  Enabled: false",
        "",
        "Naming/FileName:",
        "  Enabled: false",
        "",
        "Style/ExponentialNotation:",
        "  Enabled: true",
        "Style/HashEachMethods:",
        "  Enabled: true",
        "Style/HashTransformKeys:",
        "  Enabled: true",
        "Style/HashTransformValues:",
        "  Enabled: true",
        "Style/WordArray:",
        "  Enabled: false",
        ""
      ],
      "NewJekyllPlugInAsRubyGem-Gemfile": [
        "source \"https://rubygems.org\"",
        "",
        "# Specify your gem's dependencies in jekyll-<Company>-<Project>.gemspec",
        "gemspec",
        "",
        "gem \"rake\", \"~> 12.0\"",
        "",
        "gem \"minitest\", \"~> 5.0\"",
        "gem \"minitest-reporters\"",
        "gem \"minitest-profile\"",
        "gem 'simplecov', '~> 0.17.1'",
        "",
        "gem \"rubocop\", \"~> 1.3\"",
        "gem \"rubocop-minitest\", \"~> 0.10.1\"",
        "gem \"rubocop-performance\", \"~> 1.9\"",
        ""
      ],
      "NewJekyllPlugInAsRubyGem-Gemfile.lock": [
        "PATH",
        "  remote: .",
        "  specs:",
        "    Jekyll-<Company>-<Project> (0.1.0)",
        "      jekyll (>= 3.8)",
        "",
        "GEM",
        "  remote: https://rubygems.org/",
        "  specs:",
        "    addressable (2.7.0)",
        "      public_suffix (>= 2.0.2, < 5.0)",
        "    ansi (1.5.0)",
        "    ast (2.4.1)",
        "    builder (3.2.4)",
        "    colorator (1.1.0)",
        "    concurrent-ruby (1.1.7)",
        "    docile (1.3.2)",
        "    em-websocket (0.5.2)",
        "      eventmachine (>= 0.12.9)",
        "      http_parser.rb (~> 0.6.0)",
        "    eventmachine (1.2.7)",
        "    ffi (1.13.1)",
        "    forwardable-extended (2.6.0)",
        "    http_parser.rb (0.6.0)",
        "    i18n (1.8.5)",
        "      concurrent-ruby (~> 1.0)",
        "    jekyll (4.1.1)",
        "      addressable (~> 2.4)",
        "      colorator (~> 1.0)",
        "      em-websocket (~> 0.5)",
        "      i18n (~> 1.0)",
        "      jekyll-sass-converter (~> 2.0)",
        "      jekyll-watch (~> 2.0)",
        "      kramdown (~> 2.1)",
        "      kramdown-parser-gfm (~> 1.0)",
        "      liquid (~> 4.0)",
        "      mercenary (~> 0.4.0)",
        "      pathutil (~> 0.9)",
        "      rouge (~> 3.0)",
        "      safe_yaml (~> 1.0)",
        "      terminal-table (~> 1.8)",
        "    jekyll-sass-converter (2.1.0)",
        "      sassc (> 2.0.1, < 3.0)",
        "    jekyll-watch (2.2.1)",
        "      listen (~> 3.0)",
        "    json (2.3.1)",
        "    kramdown (2.3.0)",
        "      rexml",
        "    kramdown-parser-gfm (1.1.0)",
        "      kramdown (~> 2.0)",
        "    liquid (4.0.3)",
        "    listen (3.3.1)",
        "      rb-fsevent (~> 0.10, >= 0.10.3)",
        "      rb-inotify (~> 0.9, >= 0.9.10)",
        "    mercenary (0.4.0)",
        "    minitest (5.14.2)",
        "    minitest-profile (0.0.2)",
        "    minitest-reporters (1.4.2)",
        "      ansi",
        "      builder",
        "      minitest (>= 5.0)",
        "      ruby-progressbar",
        "    parallel (1.20.0)",
        "    parser (2.7.2.0)",
        "      ast (~> 2.4.1)",
        "    pathutil (0.16.2)",
        "      forwardable-extended (~> 2.6)",
        "    public_suffix (4.0.6)",
        "    rainbow (3.0.0)",
        "    rake (12.3.3)",
        "    rb-fsevent (0.10.4)",
        "    rb-inotify (0.10.1)",
        "      ffi (~> 1.0)",
        "    regexp_parser (1.8.2)",
        "    rexml (3.2.4)",
        "    rouge (3.25.0)",
        "    rubocop (1.3.1)",
        "      parallel (~> 1.10)",
        "      parser (>= 2.7.1.5)",
        "      rainbow (>= 2.2.2, < 4.0)",
        "      regexp_parser (>= 1.8)",
        "      rexml",
        "      rubocop-ast (>= 1.1.1)",
        "      ruby-progressbar (~> 1.7)",
        "      unicode-display_width (>= 1.4.0, < 2.0)",
        "    rubocop-ast (1.1.1)",
        "      parser (>= 2.7.1.5)",
        "    rubocop-minitest (0.10.1)",
        "      rubocop (>= 0.87)",
        "    rubocop-performance (1.9.0)",
        "      rubocop (>= 0.90.0, < 2.0)",
        "      rubocop-ast (>= 0.4.0)",
        "    ruby-progressbar (1.10.1)",
        "    safe_yaml (1.0.5)",
        "    sassc (2.4.0)",
        "      ffi (~> 1.9)",
        "    simplecov (0.17.1)",
        "      docile (~> 1.1)",
        "      json (>= 1.8, < 3)",
        "      simplecov-html (~> 0.10.0)",
        "    simplecov-html (0.10.2)",
        "    terminal-table (1.8.0)",
        "      unicode-display_width (~> 1.1, >= 1.1.1)",
        "    unicode-display_width (1.7.0)",
        "",
        "PLATFORMS",
        "  ruby",
        "",
        "DEPENDENCIES",
        "  Jekyll-<Company>-<Project>!",
        "  minitest (~> 5.0)",
        "  minitest-profile",
        "  minitest-reporters",
        "  rake (~> 12.0)",
        "  rubocop (~> 1.3)",
        "  rubocop-minitest (~> 0.10.1)",
        "  rubocop-performance (~> 1.9)",
        "  simplecov (~> 0.17.1)",
        "",
        "BUNDLED WITH",
        "   2.1.4",
        ""
      ],
      "NewJekyllPlugInAsRubyGem-Rakefile": [
        "# frozen_string_literal: true",
        "",
        "require 'bundler/gem_tasks'",
        "",
        "task default: [:test]",
        "",
        "def name",
        "  Jekyll::<Company>::<Project>::RUBYGEM_NAME",
        "end",
        "",
        "def version",
        "  Jekyll::<Company>::<Project>::VERSION",
        "end",
        "",
        "require 'rake/testtask'",
        "Rake::TestTask.new(:test) do |test|",
        "  test.libs << 'lib' << 'test'",
        "  test.pattern = 'test/**/*_test.rb'",
        "  test.verbose = true",
        "end",
        "",
        "require 'rdoc/task'",
        "Rake::RDocTask.new do |rdoc|",
        "  rdoc.rdoc_dir = 'rdoc'",
        "  rdoc.title = \"#{name} #{version}\"",
        "  rdoc.rdoc_files.include('README*')",
        "  rdoc.rdoc_files.include('lib/**/*.rb')",
        "end",
        ""
      ],
      "NewJekyllPlugInAsRubyGem-jekyll-KargWare-PlugInTemplate.gemspec": [
        "require_relative 'lib/jekyll/<Company>/<Project>/version'",
        "",
        "Gem::Specification.new do |spec|",
        "  spec.name          = Jekyll::<Company>::<Project>::RUBYGEM_NAME",
        "  spec.version       = Jekyll::<Company>::<Project>::VERSION",
        "  spec.authors       = ['Nicolas Karg', 'n13.org - Open-Source by KargWare']",
        "  spec.email         = [\"rubygems.org@n13.org\"]",
        "  spec.homepage      = \"https://notes.n13.org/rubygems\"",
        "",
        "  spec.summary       = %q{A template project for jekyll plugins.}",
        "  spec.description   = <<-LONGDESCRIPTION",
        "    A template project for jekyll plugins with some additional content",
        "  LONGDESCRIPTION",
        "  ",
        "  spec.metadata      = {",
        "    'homepage_uri'    => spec.homepage,",
        "    'bug_tracker_uri' => 'https://github.com/n13org/jekyll-plugin-template/issues',",
        "    'source_code_uri' => 'https://github.com/n13org/jekyll-plugin-template'",
        "  }",
        "",
        "  spec.required_ruby_version = Gem::Requirement.new(\">= 2.3.0\")",
        "  spec.add_dependency 'jekyll', '>= 3.8'",
        "",
        "  spec.test_files    = spec.files.grep(%r{^(test|spec|features)/})",
        "  spec.files         = Dir[",
        "                         'README.md', 'LICENSE', 'CHANGELOG.md',",
        "                         'lib/**/*.rb'",
        "                       ]",
        "  spec.require_paths = [\"lib\"]",
        "end",
        ""
      ],
      "NewJekyllPlugInAsRubyGem-lib/jekyll/KargWare/PlugInTemplate/configuration.rb": [
        "# frozen_string_literal: true",
        "",
        "module Jekyll",
        "  module <Company>",
        "    module <Project>",
        "      # <Project> configuration class",
        "      class Configuration",
        "        attr_accessor :my_integer, :my_float, :my_boolean, :my_string",
        "",
        "        DEFAULT_CONFIG = {",
        "          'my_integer' => 1,",
        "          'my_float' => 2.4,",
        "          'my_boolean' => true,",
        "          'my_string' => 'foo bar'",
        "        }.freeze",
        "",
        "        def initialize(options)",
        "          options = generate_option_hash(options)",
        "",
        "          @my_integer = options['my_integer']",
        "          @my_float = options['my_float']",
        "          @my_boolean = options['my_boolean']",
        "          @my_string = options['my_string']",
        "        end",
        "",
        "        private",
        "",
        "        def generate_option_hash(options)",
        "          DEFAULT_CONFIG.merge(options)",
        "        rescue TypeError",
        "          DEFAULT_CONFIG",
        "        end",
        "      end",
        "    end",
        "  end",
        "end",
        ""
      ],
      "NewJekyllPlugInAsRubyGem-lib/jekyll/KargWare/PlugInTemplate/version.rb": [
        "# frozen_string_literal: true",
        "",
        "module Jekyll",
        "  module <Company>",
        "    module <Project>      ",
        "      RUBYGEM_NAME = 'Jekyll-<Company>-<Project>'",
        "      VERSION = '0.1.0'",
        "    end",
        "  end",
        "end",
        ""
      ],
      "NewJekyllPlugInAsRubyGem-lib/jekyll/KargWare/PlugInTemplate.rb": [
        "# frozen_string_literal: true",
        "",
        "module Jekyll",
        "  module <Company>",
        "    module <Project>",
        "      class Error < StandardError; end",
        "      class Exception < Gem::Exception; end",
        "",
        "      # Your code goes here...",
        "    end",
        "  end",
        "end",
        ""
      ],
      "NewJekyllPlugInAsRubyGem-test/jekyll/KargWare/PlugInTemplate/configuration_test.rb": [
        "# frozen_string_literal: true",
        "",
        "require 'test_helper'",
        "require 'jekyll/<Company>/<Project>/configuration'",
        "",
        "module Jekyll",
        "  module <Company>",
        "    module <Project>",
        "      # Test the <Project> configuration",
        "      class ConfigurationTest < Minitest::Test",
        "        def test_default_configuration",
        "          configuration = Jekyll::<Company>::<Project>::Configuration.new({})",
        "",
        "          assert_equal 1, configuration.my_integer",
        "          assert_equal 2.4, configuration.my_float",
        "          assert_equal true, configuration.my_boolean",
        "          assert_equal 'foo bar', configuration.my_string",
        "        end",
        "",
        "        def test_type_error_in_configuration",
        "          configuration = Jekyll::<Company>::<Project>::Configuration.new('TypeError!')",
        "",
        "          assert_equal 1, configuration.my_integer",
        "          assert_equal 2.4, configuration.my_float",
        "          assert_equal true, configuration.my_boolean",
        "          assert_equal 'foo bar', configuration.my_string",
        "        end",
        "",
        "        def test_configuration_change_integer",
        "          configuration = Jekyll::<Company>::<Project>::Configuration.new('my_integer' => 5)",
        "",
        "          assert_equal 5, configuration.my_integer",
        "          assert_equal 2.4, configuration.my_float",
        "          assert_equal true, configuration.my_boolean",
        "          assert_equal 'foo bar', configuration.my_string",
        "        end",
        "",
        "        def test_configuration_change_float",
        "          configuration = Jekyll::<Company>::<Project>::Configuration.new({ 'my_float' => 6.66 })",
        "",
        "          assert_equal 1, configuration.my_integer",
        "          assert_equal 6.66, configuration.my_float",
        "          assert_equal true, configuration.my_boolean",
        "          assert_equal 'foo bar', configuration.my_string",
        "        end",
        "",
        "        def test_configuration_change_boolean",
        "          configuration = Jekyll::<Company>::<Project>::Configuration.new({ 'my_boolean' => false })",
        "",
        "          assert_equal 1, configuration.my_integer",
        "          assert_equal 2.4, configuration.my_float",
        "          assert_equal false, configuration.my_boolean",
        "          assert_equal 'foo bar', configuration.my_string",
        "        end",
        "",
        "        def test_configuration_change_string",
        "          configuration = Jekyll::<Company>::<Project>::Configuration.new({ 'my_string' => 'bar foo' })",
        "",
        "          assert_equal 1, configuration.my_integer",
        "          assert_equal 2.4, configuration.my_float",
        "          assert_equal true, configuration.my_boolean",
        "          assert_equal 'bar foo', configuration.my_string",
        "        end",
        "",
        "        def test_configuration_change_all",
        "          configuration = Jekyll::<Company>::<Project>::Configuration.new({ 'my_integer' => 42, 'my_float' => 1.23, 'my_boolean' => false, 'my_string' => 'testing ...' })",
        "",
        "          assert_equal 42, configuration.my_integer",
        "          assert_equal 1.23, configuration.my_float",
        "          assert_equal false, configuration.my_boolean",
        "          assert_equal 'testing ...', configuration.my_string",
        "        end",
        "      end",
        "    end",
        "  end",
        "end",
        ""
      ],
      "NewJekyllPlugInAsRubyGem-test/jekyll/KargWare/PlugInTemplate/version_test.rb": [
        "# frozen_string_literal: true",
        "",
        "require 'test_helper'",
        "",
        "module Jekyll",
        "  module <Company>",
        "    module <Project>",
        "      class GeneralTest < Minitest::Test",
        "        def test_that_it_has_a_rubygem_name",
        "          refute_nil Jekyll::<Company>::<Project>::RUBYGEM_NAME",
        "        end",
        "",
        "        def test_that_it_has_a_version_number",
        "          refute_nil Jekyll::<Company>::<Project>::VERSION",
        "        end",
        "",
        "        def test_fail_always_please_remove",
        "          assert true",
        "        end",
        "      end",
        "    end",
        "  end",
        "end",
        ""
      ],
      "NewJekyllPlugInAsRubyGem-test/test_helper.rb": [
        "# frozen_string_literal: true",
        "",
        "# $LOAD_PATH.unshift File.expand_path('../lib', __dir__)",
        "# require 'jekyll/<Company>/<Project>'",
        "# require 'jekyll/<Company>/<Project>/configuration",
        "",
        "require 'simplecov'",
        "SimpleCov.start",
        "",
        "require 'minitest/autorun'",
        "require 'minitest/reporters'",
        "Minitest::Reporters.use!",
        ""
      ]
    }
  }
}